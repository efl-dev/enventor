styles
  {
     style { name: "entry_linenumber_style";
        base: "font="FN" font_size=11 color=#6f6f6f text_class=entry";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_edit_style";
        base: "font="FN" font_size=11 color=#c80000 text_class=entry";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_single_textblock_style";
        base: "font="FN" font_size=12 color=#323232 wrap=none text_class=entry left_margin=2 right_margin=2";
        tag:  "br" "";
        tag:  "ps" "";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }

/*
     style { name: "entry_textblock_style_mixedwrap";
        base: "font=Sans font_size=10 color=#000 wrap=mixed text_class=entry left_margin=2 right_margin=2";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_textblock_disabled_style_mixedwrap";
        base: "font=Sans font_size=10 color=#00000080 wrap=char text_class=entry left_margin=2 right_margin=2";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_textblock_guide_style_mixedwrap";
        base: "font=Sans font_size=10 color=#00000040 wrap=mixed text_class=entry left_margin=2 right_margin=2 ellipsis=0.0";
        tag:  "em" "+ font_style=Oblique";
        tag:  "hilight" "+ font_weight=Bold";
     }
     style { name: "entry_textblock_style_charwrap";
        base: "font=Sans font_size=10 color=#000 wrap=char text_class=entry left_margin=2 right_margin=2";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_textblock_disabled_style_charwrap";
        base: "font=Sans font_size=10 color=#00000080 wrap=char text_class=entry left_margin=2 right_margin=2";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_textblock_guide_style_charwrap";
        base: "font=Sans font_size=10 color=#00000040 wrap=char text_class=entry left_margin=2 right_margin=2 ellipsis=0.0";
        tag:  "em" "+ font_style=Oblique";
        tag:  "hilight" "+ font_weight=Bold";
     }
     style { name: "entry_single_t2xtblock_style";
        base: "font=Sans font_size=10 color=#000 wrap=none text_class=entry left_margin=2 right_margin=2";
        tag:  "br" "";
        tag:  "ps" "";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_single_textblock_disabled_style";
        base: "font=Sans font_size=10 color=#00000080 wrap=none text_class=entry left_margin=2 right_margin=2";
        tag:  "br" "";
        tag:  "ps" "";
        tag:  "em" "+ font_style=Oblique";
        tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
        tag:  "hilight" "+ font_weight=Bold";
        tag:  "preedit" "+ underline=on underline_color=#000";
        tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#FFFFFF";
     }
     style { name: "entry_single_textblock_guide_style";
        base: "font=Sans font_size=10 color=#00000080 wrap=none text_class=entry left_margin=2 right_margin=2 ellipsis=0.0";
        tag:  "br" "";
        tag:  "ps" "";
        tag:  "em" "+ font_style=Oblique";
        tag:  "hilight" "+ font_weight=Bold";
     }
*/
  }

group { name: "elm/scroller/entry/about";
   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   images {
      image: "shelf_inset.png" COMP;
      image: "bt_sm_base2.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "sl_bt2_2.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            color: 255 255 255 0;
         }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      part { name: "contentclipper";
         type: RECT;
         mouse_events: 0;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.icon";
            rel1.relative: 1.0 0.0;
            rel2.to: "elm.swallow.end";
            rel2.relative: 0.0 1.0;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               to: "bg";
               relative: -1.0 0.0;
               offset: 0 0;
            }
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
               offset: -1 -1;
            }
            visible: 0;
         }
         description { state: "visible" 0.0;
            fixed: 1 1;
            align: 0.0 1.0;
            rel1 {
               to: "bg";
               relative: 0.0 0.0;
               offset: 0 0;
            }
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
               offset: -1 -1;
            }
            visible: 1;
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
               offset: 0 0;
            }
            rel2 {
               to: "bg";
               relative: 1.0 1.0;
               offset: -1 -1;
            }
            visible: 0;
         }
         description { state: "visible" 0.0;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
               offset: 0 0;
            }
            rel2 {
               to: "bg";
               relative: 1.0 1.0;
               offset: -1 -1;
            }
            visible: 1;
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "contentclipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1 {
               to: "elm.swallow.icon";
               relative: 1.0 0.0;
               offset: 4 4;
            }
            rel2 {
               to: "elm.swallow.end";
               relative: 0.0 1.0;
               offset: -5 -5;
            }
         }
      }
      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 10 17;
            align: 1.0 0.0;
            rel1 {
               relative: 0.0 0.0;
               offset:   -2 2;
               to_y:     "elm.swallow.content";
               to_x:     "elm.swallow.end";
            }
            rel2 {
               relative: 0.0 0.0;
               offset:   -2 -1;
               to_y:     "sb_hbar";
               to_x:     "elm.swallow.end";
            }
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 10 17;
            max: 10 99999;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
               middle: SOLID;
            }
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 10;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   2 0;
               to_x:     "elm.swallow.content";
               to_y:     "elm.swallow.content";
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -1;
               to_x:     "sb_vbar";
               to_y:     "elm.swallow.content";
            }
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 10;
            max: 99999 10;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 4 4 4 4;
               middle: SOLID;
            }
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 4 4 4 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_shine.png";
               border: 4 4 4 0;
            }
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }
      program { name: "icon_show";
         signal: "elm,action,show,icon";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "icon_hide";
         signal: "elm,action,hide,icon";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "end_show";
         signal: "elm,action,show,end";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "end_hide";
         signal: "elm,action,hide,end";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(1.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
   }
}

group { name: "elm/entry/base/enventor";
   alias: "elm/entry/base/about";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: EXPLICIT;
         multiline: 1;
         source: "elm/entry/selection/enventor"; // selection under
         source4: "elm/entry/cursor/enventor"; // cursorover
         source5: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            /* we gotta use 0 0 here, because of scrolled entries */
            fixed: 0 0;
            align: 0 0;
            text {
               style: "entry_edit_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
   }
}

group { name: "elm/entry/base-nowrap-noedit/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         description { state: "default" 0.0;
            align: 0 0;
            text {
               style: "entry_edit_style";
               min: 1 1;
               align: 0.0 0.0;
            }
         }
      }
   }
}

group { name: "elm/entry/base-nowrap/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         select_mode: EXPLICIT;
         description { state: "default" 0.0;
            align: 0 0;
            text {
               style: "entry_edit_style";
               min: 1 1;
               align: 0.0 0.0;
            }
         }
      }
   }
}

group { name: "elm/entry/base-nowrap-noedit/linenumber";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         description { state: "default" 0.0;
            align: 0 0;
            text {
               style: "entry_linenumber_style";
               min: 1 1;
               align: 0.0 0.0;
            }
         }
      }
   }
}

group { name: "elm/entry/base-single/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         multiline: 0;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            text {
               style: "entry_single_textblock_style";
               min: 1 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_single_textblock_disabled_style";
            }
         }
      }
   }
}

group { name: "elm/entry/cursor/enventor";
   images {
      image: "cur_box.png" COMP;
      image: "cur_hi.png" COMP;
      image: "cur_shad.png" COMP;
      image: "cur_shine.png" COMP;
      image: "cur_glow.png" COMP;
   }
   parts {
      part { name: "clip2";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "clip";
            rel2.to: "clip";
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "clip";
         type: RECT;
         mouse_events: 0;
         clip_to: "clip2";
         description { state: "default" 0.0;
            rel1.offset: -10 0;
            rel2.offset: 9 9;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         clip_to: "clip";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: -2 0;
            rel2.to: "base";
            rel2.offset: 1 1;
            image.border: 2 2 2 2;
            image.border_scale: 1;
            image.normal: "cur_shad.png";
         }
      }
      part { name: "base";
         mouse_events: 0;
         scale: 1;
         clip_to: "clip";
         description { state: "default" 0.0;
            min: 2 2;
            align: 0.5 1.0;
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -1;
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -1;
            image.normal: "cur_box.png";
         }
      }
      part { name: "hi";
         mouse_events: 0;
         clip_to: "clip";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 1.0 0.5;
            image.normal: "cur_hi.png";
         }
      }
      part { name: "shine";
         mouse_events: 0;
         clip_to: "clip";
         clip_to: "clip2";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 1.0 0.75;
            image.border: 2 2 1 0;
            image.border_scale: 1;
            image.normal: "cur_shine.png";
            fill.smooth: 0;
         }
      }
      part { name: "glow";
         mouse_events: 0;
         clip_to: "clip2";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.relative: 0.0 -2.0;
            rel1.offset: -2 0;
            rel2.to: "base";
            rel2.relative: 1.0 0.0;
            rel2.offset: 1 1;
            image.border: 2 2 0 4;
            image.border_scale: 1;
            image.normal: "cur_glow.png";
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 55;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "blink";
         action: STATE_SET "visible" 0.0;
         in: 0.2 0.0;
         target: "clip";
         after: "blink2";
      }
      program { name: "blink2";
         action: STATE_SET "visible" 0.0;
         in: 0.2 0.0;
         target: "glow";
         after: "blink3";
      }
      program { name: "blink3";
         action: STATE_SET "default" 0.0;
         in: 0.2 0.0;
         target: "glow";
         after: "blink4";
      }
      program { name: "blink4";
         action: STATE_SET "default" 0.0;
         in: 0.2 0.0;
         target: "clip";
         after: "blink";
      }
      program { name: "noblink";
         action: ACTION_STOP;
         target: "blink";
         target: "blink2";
         target: "blink3";
         target: "blink4";
         after: "noblink2";
      }
      program { name: "noblink2";
         action: STATE_SET "default" 0.0;
         target: "clip";
         target: "glow";
      }
      program { name: "focused";
         signal: "elm,action,focus";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "clip2";
         after: "blink";
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "clip2";
         after: "noblink";
      }
   }
}

group { name: "elm/entry/selection/enventor";
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 128 128 128 128;
         }
      }
   }
}

group { name: "elm/entry/anchor/enventor";
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 128 0 0 64;
         }
      }
   }
}

/*
group { name: "elm/entry/base-mixedwrap/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_textblock_guide_style_mixedwrap";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style_mixedwrap";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style_mixedwrap";
               min: 0 1;
            }
         }
      }
   }
}

group { name: "elm/entry/base-charwrap/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_textblock_guide_style_charwrap";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style_charwrap";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style_charwrap";
               min: 0 1;
            }
         }
      }
   }
}

group { name: "elm/entry/base-single/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_single_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         multiline: 0;
         description { state: "default" 0.0;
            text {
               style: "entry_single_textblock_style";
               min: 1 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_single_textblock_disabled_style";
            }
         }
      }
   }
}

group { name: "elm/entry/base-single-noedit/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         multiline: 0;
         source: "elm/entry/selection/enventor"; // selection under
         source4: ""; // cursorover
         source5: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            text {
               style: "entry_single_textblock_style";
               min: 1 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_single_textblock_disabled_style";
            }
         }
      }
   }
}

group { name: "elm/entry/base-noedit/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source: "elm/entry/selection/enventor"; // selection under
         source4: ""; // cursorover
         source5: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style";
            }
         }
      }
   }
}

group { name: "elm/entry/base-noedit-mixedwrap/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source: "elm/entry/selection/enventor"; // selection under
         source4: ""; // cursorover
         source5: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style_mixedwrap";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style_mixedwrap";
            }
         }
      }
   }
}

group { name: "elm/entry/base-noedit-charwrap/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source: "elm/entry/selection/enventor"; // selection under
         source4: ""; // cursorover
         source5: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style_charwrap";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style_charwrap";
            }
         }
      }
   }
}

group { name: "elm/entry/base-password/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_single_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         entry_mode: PASSWORD;
         multiline: 0;
         source: "elm/entry/selection/enventor"; // selection under
         source4: "elm/entry/cursor/enventor"; // cursorover
         source5: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            text {
               style: "entry_single_textblock_style";
               repch: "*";
               min: 1 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_single_textblock_disabled_style";
            }
         }
      }
   }
}
*/

group { name: "elm/ctxpopup/bg/enventor";
   parts {
      part { name: "ctxpopup_bg";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 15;
         }
      }
   }
   programs {
      program { name: "clicked_event";
         signal: "mouse,clicked,1";
         source: "ctxpopup_bg";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "show";
         signal: "elm,state,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "ctxpopup_bg";
         transition: LINEAR 0.25;
      }
      program { name: "hide";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "ctxpopup_bg";
         transition: LINEAR 0.25;
      }
   }
}

group { name: "elm/list/base/enventor";
   data {
      item: "focus_highlight" "on";
   }
   script {
	   public sbvis_v, sbvis_h;
	}
   images {
      image: "shelf_inset.png" COMP;
      image: "sl_bt2_2.png" COMP;
      image: "bt_sm_base2.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "sb_runnerh.png" COMP;
      image: "sb_runnerv.png" COMP;
      image: "arrow_up.png" COMP;
      image: "arrow_down.png" COMP;
      image: "arrow_right.png" COMP;
      image: "arrow_left.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            color: 255 255 255 0;
         }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel2 {
               to_x: "sb_vbar";
               to_y: "sb_hbar";
               relative: 1.0 1.0;
               offset: -1 -1;
            }
         }
         description { state: "both" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 0.0 1.0;
         }
         description { state: "vertical" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 0.0 1.0;
         }
         description { state: "horizontal" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "conf_over";
         mouse_events: 0;
         description { state: "default" 0.0;
            image {
               normal: "shelf_inset.png";
               border: 7 7 7 7;
               middle: 0;
            }
            fill.smooth: 0;
         }
      }
      part { name: "focus_highlight";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: -1 -1;
            rel2.offset: 0 0;
            image {
               normal: "sl_bt2_2.png";
               border: 7 7 7 7;
               middle: 0;
            }
            fill.smooth: 0;
            color: 200 155 0 0;
         }
         description { state: "enabled" 0.0;
            inherit: "default" 0.0;
            color: 200 155 0 255;
         }
      }
      part { name: "elm.scrollbar.base";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 13 13;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1.relative: 1.0 1.0;
            rel2.offset: 12 12;
         }
         description { state: "vertical" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.0;
            rel2.offset: -2 12;
         }
         description { state: "horizontal" 0.0;
            inherit: "default" 0.0;
            align: 0.0 1.0;
            rel2.offset: 12 -2;
         }
         description { state: "both" 0.0;
            inherit: "default" 0.0;
            align: 1.0 1.0;
            rel2.offset: -2 -2;
         }
      }
      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar_clip";
         type: RECT;
         mouse_events: 0;
         clip_to: "sb_vbar_clip_master";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_clip_master";
            rel2.to: "sb_vbar_clip_master";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
            max: 0 99999;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            min: 13 0;
            fixed: 1 1;
            color: 0 0 0 0;
            align: 0.0 0.5;
            rel1 {
               to_y: "sb_vbar_a1";
               to_x: "elm.scrollbar.base";
               relative: 0.0 1.0;
               offset: 0 -1;
            }
            rel2 {
               to_y: "sb_vbar_a2";
               relative: 1.0 0.0;
               offset: -1 -2;
            }
         }
      }
      part { name: "sb_vbar_runner";
         mouse_events: 0;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            min: 3 0;
            max: 3 99999;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 {
               to: "sb_vbar";
               relative: 0.5 0.0;
               offset: 0 2;
            }
            rel2 {
               to: "sb_vbar";
               relative: 0.5 1.0;
               offset: 0 -2;
            }
            image {
               normal: "sb_runnerv.png";
               border: 0 0 4 4;
            }
            fill.smooth: 0;
         }
      }
      part { name: "sb_vbar_p1";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
            rel1 {
               to: "sb_vbar_a1";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.dragable.vbar";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "sb_vbar_p2";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
            rel1 {
               to: "elm.dragable.vbar";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "sb_vbar_a2";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "sb_vbar_a1";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            min: 13 13;
            fixed: 1 1;
            align: 0.5 0.0;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1 {
               to_y: "sb_vbar_clip";
               to_x: "elm.scrollbar.base";
               relative: 0.0 0.0;
               offset: 0 1;
            }
            rel2 {
               to: "elm.scrollbar.base";
               relative: 1.0 0.0;
               offset: -1 -2;
            }
         }
      }
      part { name: "sb_vbar_a1_arrow";
         mouse_events: 0;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a1";
            rel2.to: "sb_vbar_a1";
            image.normal: "arrow_up.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 0 -1;
            rel2.offset: -1 -2;
         }
      }
      part { name: "sb_vbar_a2";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            min: 13 13;
            fixed: 1 1;
            align: 0.5 1.0;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "elm.scrollbar.base";
            rel2 {
               to: "elm.scrollbar.base";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "sb_vbar_a2_arrow";
         mouse_events: 0;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a2";
            rel2.to: "sb_vbar_a2";
            image.normal: "arrow_down.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 0 1;
            rel2.offset: -1 0;
         }
      }
      part { name: "elm.dragable.vbar";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_vbar_clip";
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            min: 13 20;
            fixed: 1 1;
            aspect: 1.0 0.5;
            aspect_preference: VERTICAL;
            align: 0.5 0.0;
            color: 0 0 0 0;
            rel1 {
               to_y: "sb_vbar";
               to_x: "elm.scrollbar.base";
               relative: 0.0 0.0;
            }
            rel2.to_y: "sb_vbar";
         }
      }
      part { name: "elm.dragable.vbar.image";
         mouse_events: 0;
         clip_to: "sb_vbar_clip";
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar.image";
            rel2 {
               to: "elm.dragable.vbar.image";
               relative: 1.0 0.5;
            }
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar.image";
            rel2.to: "elm.dragable.vbar.image";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar_clip";
         type: RECT;
         mouse_events: 0;
         clip_to: "sb_hbar_clip_master";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_clip_master";
            rel2.to: "sb_hbar_clip_master";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
            max: 99999 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            min: 0 13;
            fixed: 1 1;
            color: 0 0 0 0;
            align: 0.5 0.5;
            rel1 {
               to_x: "sb_hbar_a1";
               to_y: "elm.scrollbar.base";
               relative: 1.0 0.0;
               offset: -1 0;
            }
            rel2 {
               to_x: "sb_hbar_a2";
               relative: 0.0 1.0;
               offset: -2 -1;
            }
         }
      }
      part { name: "sb_hbar_runner";
         mouse_events: 0;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            min: 0 3;
            max: 99999 3;
            fixed: 1 1;
            align: 0.5 0.5;
            rel1 {
               to: "sb_hbar";
               relative: 0.0 0.5;
               offset: 2 0;
            }
            rel2 {
               to: "sb_hbar";
               relative: 1.0 0.5;
               offset: -2 0;
            }
            image {
               normal: "sb_runnerh.png";
               border: 4 4 0 0;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.hbar";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_hbar_clip";
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            min: 20 13;
            fixed: 1 1;
            aspect_preference: HORIZONTAL;
            align: 0.0 1.0;
            color: 0 0 0 0;
            rel1 {
               to_x: "sb_hbar";
               relative: 0.0 1.0;
            }
            rel2.to_x: "sb_hbar";
         }
      }
      part { name: "elm.dragable.hbar.image";
         mouse_events: 0;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar.image";
            rel2 {
               to: "elm.dragable.hbar.image";
               relative: 1.0 0.5;
            }
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar.image";
            rel2.to: "elm.dragable.hbar.image";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_p1";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
            rel1 {
               to: "sb_hbar_a1";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.dragable.hbar";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "sb_hbar_p2";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
            rel1 {
               to: "elm.dragable.hbar";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "sb_hbar_a2";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "sb_hbar_a1";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            min: 13 13;
            fixed: 1 1;
            align: 0.0 1.0;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1 {
               to_x: "sb_hbar_clip";
               to_y: "elm.scrollbar.base";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "elm.scrollbar.base";
               relative: 0.0 1.0;
               offset: -1 -1;
            }
         }
      }
      part { name: "sb_hbar_a1_arrow";
         mouse_events: 0;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.to: "sb_hbar_a1";
            image.normal: "arrow_left.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: -1 0;
            rel2.offset: -2 -1;
         }
      }
      part { name: "sb_hbar_a2";
         type: RECT;
         mouse_events: 1;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            min: 13 13;
            align: 1.0 1.0;
            aspect: 1.0 1.0;
            fixed: 1 1;
            aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1 {
               to: "elm.scrollbar.base";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.scrollbar.base";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "sb_hbar_a2_arrow";
         mouse_events: 0;
         clip_to: "sb_hbar_clip";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a2";
            rel2.to: "sb_hbar_a2";
            image.normal: "arrow_right.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 1 0;
            rel2.offset: 0 -1;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "clipper";
            rel2.to: "clipper";
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 128 128 128 128;
         }
      }
      programs {
         program { name: "load";
            signal: "load";
            source: "";
            script {
               set_state(PART:"sb_hbar_clip", "hidden", 0.0);
               set_state(PART:"sb_vbar_clip", "hidden", 0.0);
               set_int(sbvis_h, 0);
               set_int(sbvis_v, 0);
            }
         }
         program { name: "vbar_show";
            signal: "elm,action,show,vbar";
            source: "elm";
            script {
               set_state(PART:"sb_vbar_clip_master", "default", 0.0);
               set_int(sbvis_v, 1);
               if (get_int(sbvis_h)) {
                  set_state(PART:"elm.swallow.content", "both", 0.0);
                  set_state(PART:"elm.scrollbar.base", "both", 0.0);
               } else {
                  set_state(PART:"elm.scrollbar.base", "vertical", 0.0);
                  set_state(PART:"elm.swallow.content", "vertical", 0.0);
               }
               emit("do-show-vbar", "");
            }
         }
         program { name: "vbar_hide";
            signal: "elm,action,hide,vbar";
            source: "elm";
            script {
               set_state(PART:"sb_vbar_clip_master", "hidden", 0.0);
               set_int(sbvis_v, 0);
               if (get_int(sbvis_h)) {
                  set_state(PART:"elm.swallow.content", "horizontal", 0.0);
                  set_state(PART:"elm.scrollbar.base", "horizontal", 0.0);
               } else {
                  set_state(PART:"elm.swallow.content", "default", 0.0);
                  set_state(PART:"elm.scrollbar.base", "default", 0.0);
               }
               emit("do-hide-vbar", "");
            }
         }
         program { name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "elm.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            target: "elm.dragable.vbar";
         }
         program { name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "elm.dragable.vbar";
            action: STATE_SET "default" 0.0;
            target: "elm.dragable.vbar";
         }
         program { name: "sb_vbar_show";
            signal: "do-show-vbar";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target: "sb_vbar_clip";
         }
         program { name: "sb_vbar_hide";
            signal: "do-hide-vbar";
            source: "";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 1.0;
            target: "sb_vbar_clip";
         }
         program { name: "sb_vbar_press";
            signal: "mouse,down,1";
            source: "elm.dragable.vbar";
            action:  SIGNAL_EMIT "elm,vbar,press" "elm";
         }
         program { name: "sb_vbar_unpress";
            signal: "mouse,up,1";
            source: "elm.dragable.vbar";
            action:  SIGNAL_EMIT "elm,vbar,unpress" "elm";
         }
         program { name: "sb_vbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program { name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "elm.dragable.vbar";
         }
         program { name: "sb_vbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program { name: "sb_vbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program { name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "elm.dragable.vbar";
         }
         program { name: "sb_vbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program { name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "elm.dragable.vbar";
         }
         program { name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE 0.0 1.0;
            target: "elm.dragable.vbar";
         }
         program { name: "hbar_show";
            signal: "elm,action,show,hbar";
            source: "elm";
            script {
               set_state(PART:"sb_hbar_clip_master", "default", 0.0);
               set_int(sbvis_h, 1);
               if (get_int(sbvis_v)) {
                  set_state(PART:"elm.swallow.content", "both", 0.0);
                  set_state(PART:"elm.scrollbar.base", "both", 0.0);
               } else {
                  set_state(PART:"elm.swallow.content", "horizontal", 0.0);
                  set_state(PART:"elm.scrollbar.base", "horizontal", 0.0);
               }
               emit("do-show-hbar", "");
            }
         }
         program { name: "hbar_hide";
            signal: "elm,action,hide,hbar";
            source: "elm";
            script {
               set_state(PART:"sb_hbar_clip_master", "hidden", 0.0);
               set_int(sbvis_h, 0);
               if (get_int(sbvis_v)) {
                  set_state(PART:"elm.swallow.content", "vertical", 0.0);
                  set_state(PART:"elm.scrollbar.base", "vertical", 0.0);
               } else {
                  set_state(PART:"elm.swallow.content", "default", 0.0);
                  set_state(PART:"elm.scrollbar.base", "default", 0.0);
               }
               emit("do-hide-hbar", "");
            }
         }
         program { name: "sb_hbar_down";
            signal: "mouse,down,1";
            source: "elm.dragable.hbar";
            action: STATE_SET "clicked" 0.0;
            target: "elm.dragable.hbar";
         }
         program { name: "sb_hbar_up";
            signal: "mouse,up,1";
            source: "elm.dragable.hbar";
            action: STATE_SET "default" 0.0;
            target: "elm.dragable.hbar";
         }
         program { name: "sb_hbar_show";
            signal: "do-show-hbar";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target: "sb_hbar_clip";
         }
         program { name: "sb_hbar_hide";
            signal: "do-hide-hbar";
            source: "";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 1.0;
            target: "sb_hbar_clip";
         }
         program { name: "sb_hbar_press";
            signal: "mouse,down,1";
            source: "elm.dragable.hbar";
            action:  SIGNAL_EMIT "elm,hbar,press" "elm";
         }
         program { name: "sb_hbar_unpress";
            signal: "mouse,up,1";
            source: "elm.dragable.hbar";
            action:  SIGNAL_EMIT "elm,hbar,unpress" "elm";
         }
         program { name: "sb_hbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program { name: "sb_hbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: DRAG_VAL_STEP -1.0 0.0;
            target: "elm.dragable.hbar";
         }
         program { name: "sb_hbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program { name: "sb_hbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program { name: "sb_hbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: DRAG_VAL_STEP 1.0 0.0;
            target: "elm.dragable.hbar";
         }
         program { name: "sb_hbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program { name: "sb_hbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p1";
            action: DRAG_VAL_PAGE -1.0 0.0;
            target: "elm.dragable.hbar";
         }
         program { name: "sb_hbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p2";
            action: DRAG_VAL_PAGE 1.0 0.0;
            target: "elm.dragable.hbar";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
         }
      }
   }
}

group { name: "elm/panes/vertical/enventor";
   images {
      image: "bt_base1.png" COMP;
      image: "bt_base2.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_glow.png" COMP;
      image: "arrow_right.png" COMP;
      image: "arrow_left.png" COMP;
   }
   parts {
      part { name: "whole";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
         }
      }
      //2 contents
      part { name: "whole_left";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel2.to_x: "elm.bar";
            rel2.relative: 0.0 1.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.left";
         type: SWALLOW;
         clip_to: "whole_left";
         description { state: "default" 0.0;
            rel1.to: "whole_left";
            rel2.to: "whole_left";
         }
      }
      part { name: "whole_right";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to_x: "elm.bar";
            rel1.relative: 1.0 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.right";
         type: SWALLOW;
         clip_to: "whole_right";
         description { state: "default" 0.0;
            rel1.to: "whole_right";
            rel2.to: "whole_right";
         }
      }
      //BAR
      part { name: "elm.bar";
         mouse_events: 1;
         dragable {
            confine: "whole";
            x: 1 1 1;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            max: 18 9999;
            min: 18 100;
            fixed: 1 1;
            rel1.relative: 0.0 0.5;
            rel2.relative: 1.0 0.5;
            image {
               normal: "bt_base2.png";
               border: 7 7 7 7;
            }
            image.middle: SOLID;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "bt_base1.png";
            image.middle: SOLID;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over1";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            rel2.relative: 1.0 0.5;
            image {
               normal: "bt_hilight.png";
               border: 7 7 7 0;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over2";
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            image {
               normal: "bt_shine.png";
               border: 7 7 7 7;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over3";
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name:"bar_disabled";
         type: RECT;
         description { state:"default" 0.0;
            rel1.to_x: "elm.bar";
            rel2.to_x: "elm.bar";
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.left_arrow";
         type: SWALLOW;
         description { state: "default" 0.0;
            min: 20 20;
            fixed: 1 1;
            align: 0.5 1;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            rel1.relative: 0 0;
            rel2.relative: 1 0;
            rel1.offset: 0 -10;
            rel2.offset: -1 -11;
         }
      }
      part { name: "elm.swallow.right_arrow";
         type: SWALLOW;
         description { state: "default" 0.0;
            min: 20 20;
            fixed: 1 1;
            align: 0.5 0;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            rel1.relative: 0 1;
            rel2.relative: 1 1;
            rel1.offset: 0 10;
            rel2.offset: -1 -9;
         }
      }
      //Arrow
      part { name: "arrow_right";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 45 45;
            max: 45 45;
            color: 255 255 255 0;

            rel1.relative: 1.0 0.5;
            rel1.to_x: "elm.bar";
            rel1.offset: 45/2 -45/2;

            rel2.relative: 1.0 0.5;
            rel2.to_x: "elm.bar";
            rel2.offset: 45/2 45/2;

            image.normal: "arrow_right.png";

            fixed: 1 1;
         }
         description { state: "default" 0.1;
            inherit: "default" 0.0;
            image.normal: "arrow_left.png";
         }
         description { state: "anim_1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: (45/2 + 10) -45/2;
            rel2.offset: (45/2 +10) 45/2;
         }
         description { state: "anim_1" 0.1;
            inherit: "default" 0.0;
            image.normal: "arrow_left.png";
            color: 255 255 255 200;
            rel1.offset: (45/2 + 10) -45/2;
            rel2.offset: (45/2 +10) 45/2;
         }
         description { state: "anim_2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: (45/2 + 20) -45/2;
            rel2.offset: (45/2 + 20) 45/2;
         }
         description { state: "anim_2" 0.1;
            inherit: "default" 0.0;
            image.normal: "arrow_left.png";
            color: 255 255 255 0;
            rel1.offset: (45/2 + 20) -45/2;
            rel2.offset: (45/2 + 20) 45/2;
         }
      }
      part { name: "arrow_left";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 45 45;
            max: 45 45;
            color: 255 255 255 0;

            rel1.relative: 0.0 0.5;
            rel1.to_x: "elm.bar";
            rel1.offset: -45/2 -45/2;

            rel2.relative: 0.0 0.5;
            rel2.to_x: "elm.bar";
            rel2.offset: -45/2 45/2;

            image.normal: "arrow_left.png";

            fixed: 1 1;
         }
         description { state: "default" 0.1;
            inherit: "default" 0.0;
            image.normal: "arrow_right.png";
         }
         description { state: "anim_1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: (-45/2 - 10) -45/2;
            rel2.offset: (-45/2 - 10) 45/2;
         }
         description { state: "anim_1" 0.1;
            inherit: "default" 0.0;
            image.normal: "arrow_right.png";
            color: 255 255 255 200;
            rel1.offset: (-45/2 - 10) -45/2;
            rel2.offset: (-45/2 - 10) 45/2;
         }
         description { state: "anim_2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: (-45/2 - 20) -45/2;
            rel2.offset: (-45/2 - 20) 45/2;
         }
         description { state: "anim_2" 0.1;
            inherit: "default" 0.0;
            image.normal: "arrow_right.png";
            color: 255 255 255 0;
            rel1.offset: (-45/2 - 20) -45/2;
            rel2.offset: (-45/2 - 20) 45/2;
         }
      }
   }
   programs {
      program {
         name:   "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
         after: "arrow_anim_start";
      }
      program {
         name:   "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "elm.bar";
      }
      program {
         name:   "button_unclick";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,unpress" "";
         after: "button_unclick_anim";
         after: "arrow_anim_stop";
      }
      program {
         name:   "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "elm.bar";
      }
      program {
         name:   "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program {
         name:   "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program {
         name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program {
         name:   "button_down_double";
         signal: "mouse,down,1,double";
         source: "over3";
         action: SIGNAL_EMIT "elm,action,click,double" "";
      }

      //arrows animation
      program {
         name: "arrow_anim_start";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow_left", st, 30, vl);
            if (vl == 0.0) {
               run_program(PROGRAM:"arrow_anim_start_ltr");
            }
            else {
               run_program(PROGRAM:"arrow_anim_start_rtl");
            }
         }
      }
      program {
         name: "arrow_anim_stop";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow_left", st, 30, vl);
            if (vl == 0.0) {
               run_program(PROGRAM:"arrow_anim_stop_ltr");
            }
            else {
               run_program(PROGRAM:"arrow_anim_stop_rtl");
            }
         }
      }

      program {
         name: "arrow_anim_start_ltr";
         action: STATE_SET "anim_1" 0.0;
         target: "arrow_right";
         target: "arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_1_ltr";
      }
      program {
         name: "arrow_anim_1_ltr";
         action: STATE_SET "anim_2" 0.0;
         target: "arrow_right";
         target: "arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_2_ltr";
      }
      program {
         name: "arrow_anim_2_ltr";
         action: STATE_SET "default" 0.0;
         target: "arrow_right";
         target: "arrow_left";
         after: "arrow_anim_start_ltr";
      }
      program {
         name: "arrow_anim_stop_ltr";
         action: ACTION_STOP;
         target: "arrow_anim_start_ltr";
         target: "arrow_anim_1_ltr";
         target: "arrow_anim_2_ltr";
         after: "arrow_anim_stop_1_ltr";
      }
      program {
         name: "arrow_anim_stop_1_ltr";
         action: STATE_SET "default" 0.0;
         target: "arrow_right";
         target: "arrow_left";
         transition: DECELERATE 0.4;
      }
      program {
         name: "arrow_anim_start_rtl";
         action: STATE_SET "anim_1" 0.1;
         target: "arrow_right";
         target: "arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_1_rtl";
      }
      program {
         name: "arrow_anim_1_rtl";
         action: STATE_SET "anim_2" 0.1;
         target: "arrow_right";
         target: "arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_2_rtl";
      }
      program {
         name: "arrow_anim_2_rtl";
         action: STATE_SET "default" 0.1;
         target: "arrow_right";
         target: "arrow_left";
         after: "arrow_anim_start_rtl";
      }
      program {
         name: "arrow_anim_stop_rtl";
         action: ACTION_STOP;
         target: "arrow_anim_start_rtl";
         target: "arrow_anim_1_rtl";
         target: "arrow_anim_2_rtl";
         after: "arrow_anim_stop_1_rtl";
      }
      program {
         name: "arrow_anim_stop_1_rtl";
         action: STATE_SET "default" 0.1;
         target: "arrow_right";
         target: "arrow_left";
         transition: DECELERATE 0.4;
      }
      program { name: "to_rtl";
         signal: "edje,state,rtl";
         source: "edje";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow_left", st, 30, vl);
            if (vl == 0.0) {
               set_state(PART:"arrow_left", st, 0.1);
            }
            get_state(PART:"arrow_right", st, 30, vl);
            if (vl == 0.0) {
               set_state(PART:"arrow_right", st, 0.1);
            }
         }
      }
      program { name: "to_ltr";
         signal: "edje,state,ltr";
         source: "edje";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow_left", st, 30, vl);
            if (vl == 0.1) {
               set_state(PART:"arrow_left", st, 0.0);
            }
            get_state(PART:"arrow_right", st, 30, vl);
            if (vl == 0.1) {
               set_state(PART:"arrow_right", st, 0.0);
            }
         }
      }
      //fix the pane
      program {
         name: "panes_fixed";
         signal: "elm,panes,fixed";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.bar";
         target: "over1";
         target: "bar_disabled";
      }
      //allow the movement by interaction
      program {
         name: "panes_unfixed";
         signal: "elm,panes,unfixed";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.bar";
         target: "over1";
         target: "bar_disabled";
      }
   }
}


