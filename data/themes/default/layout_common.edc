images {
   image: "frame_bg.png" COMP;
   image: "warning.png" COMP;
   image: "folder.png" COMP;
   image: "new.png" COMP;
   image: "shine.png" COMP;
   image: "bub_over_bot.png" COMP;
   image: "disabler.png" COMP;
   image: "bevel_out.png" COMP;
   image: "full_logo.png" COMP;
   image: "cursor_arrow.png" COMP;
   image: "navi_group.png" COMP;
   image: "bg_demo.png" COMP;
}

group { name: "fileselector_layout";
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 127 127 127 127;
         }
         description { state: "show" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "bg";
         type: RECT;
         clip_to: "clipper";
         description { state: "default" 0.0;
            color: 0 0 0 175;
         }
      }
      part { name: "base_frame_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            min: 600 435;
            max: 600 435;
            fixed: 1 1;
            image.normal: "frame_bg.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
         }
      }
      part { name: "shine_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 0; }
            align: 0.5 0;
            min: 600 3;
            fixed: 1 1;
            image.normal: "shine.png";
         }
      }
      part { name: "base_frame";
         type: SPACER;
         description {
            rel1 { to: "base_frame_img"; offset: 10 10; }
            rel2 { to: "base_frame_img"; offset: -11 -11; }
         }
      }
      part { name: "title_frame";
         type: RECT;
         scale: 1;
         clip_to: "clipper";
         description {
            rel1 { to: "base_frame"; }
            rel2 { to: "base_frame"; relative: 1 0; }
            align: 0.5 0;
            min: 0 23;
            fixed: 0 1;
            color: 0 0 0 255;
         }
      }
      part { name: "title_icon";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "title_frame";
            rel2.to: "title_frame";
            image.normal: "folder.png";
         }
      }
      part { name: "elm.text.title";
         type: TEXT;
         scale: 1;
         clip_to: "clipper";
         effect: GLOW;
         description {
            rel1.to: "title_frame";
            rel2.to: "title_frame";
            align: 0.5 0.5;
            fixed: 1 1;
            text {
               font: FN;
               size: 12;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
            color: COL_HI;
         }
      }
      part { name: "elm.swallow.fileselector";
         type: SWALLOW;
         clip_to: "clipper";
         description {
            rel1 { to: "title_frame"; relative: 0 1; }
            rel2 { to: "base_frame"; }
         }
      }
      part { name: "elm.text.msg";
         type: TEXT;
         effect: SHADOW BOTTOM;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.relative: 0 1;
            rel1.to: "elm.swallow.fileselector";
            rel2.relative: 1 1;
            rel2.to: "elm.swallow.fileselector";
            text {
               font: FN;
               size: 11;
               align: 0.5 1;
            }
            color: COL_NM_TRANS;
            fixed: 0 1;
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            color: COL_NM;
         }
      }
      part { name: "event_blocker";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 1;
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         mouse_events: 0;
         description {
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 1; }
            image.normal: "bub_over_bot.png";
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         action: STATE_SET "show" 0.0;
         transition: "DECELERATE" 0.5;
         target: "clipper";
         after: "event_blocker_hide";
      }
      program { name: "dismiss";
         signal: "elm,state,dismiss";
         source: "";
         action: STATE_SET "default" 0.0;
//         transition: "DECELERATE" 0.125;
         target: "clipper";
         target: "event_blocker";
         after: "dismiss_done";
      }
      program { name: "event_blocker_hide";
         signal: "elm,state,event_blocker,hide";
         source: "";
         action: STATE_SET "hide" 0.0;
         target: "event_blocker";
      }
      program { name: "dismiss_done";
         action: SIGNAL_EMIT "elm,state,dismiss,done" "";
      }
      program { name: "msg_show";
         signal: "elm,action,msg,show";
         source: "";
         action: STATE_SET "show" 0.0;
         target: "elm.text.msg";
         transition: DECELERATE 0.3;
         after: "msg_idle";
      }
      program { name: "msg_idle";
         action: STATE_SET "show" 0.0;
         target: "elm.text.msg";
         transition: LINEAR 1;
         after: "msg_hide";
      }
      program { name: "msg_hide";
         action: STATE_SET "default" 0.0;
         target: "elm.text.msg";
         transition: DECELERATE 0.3;
      }
   }
}

group { name: "newfile_layout";
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 127 127 127 127;
         }
         description { state: "show" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "bg";
         type: RECT;
         clip_to: "clipper";
         description { state: "default" 0.0;
            color: 0 0 0 175;
         }
      }
      part { name: "base_frame_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            min: 600 435;
            max: 600 435;
            fixed: 1 1;
            image.normal: "frame_bg.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
         }
      }
      part { name: "shine_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 0; }
            align: 0.5 0;
            min: 600 3;
            fixed: 1 1;
            image.normal: "shine.png";
         }
      }
      part { name: "base_frame";
         type: SPACER;
         description {
            rel1 { to: "base_frame_img"; offset: 10 10; }
            rel2 { to: "base_frame_img"; offset: -11 -11; }
         }
      }
      part { name: "title_frame";
         type: RECT;
         scale: 1;
         clip_to: "clipper";
         description {
            rel1 { to: "base_frame"; }
            rel2 { to: "base_frame"; relative: 1 0; }
            align: 0.5 0;
            min: 0 23;
            fixed: 0 1;
            color: 0 0 0 255;
         }
      }
      part { name: "title_icon";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "title_frame";
            rel2.to: "title_frame";
            image.normal: "new.png";
         }
      }
      part { name: "elm.text.title";
         type: TEXT;
         scale: 1;
         clip_to: "clipper";
         effect: GLOW;
         description {
            rel1.to: "title_frame";
            rel2.to: "title_frame";
            align: 0.5 0.5;
            fixed: 1 1;
            text {
               font: FN;
               size: 12;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
            color: COL_HI;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper";
         description {
            rel1 { to: "title_frame"; relative: 0 1; offset: 0 5; }
            rel2 { to: "base_frame"; relative: 1 0.91; }
         }
      }
      part { name: "elm.swallow.ok_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description {
            align: 1 1;
            min: 50 25;
            fixed: 1 1;
            rel1.to: "base_frame";
            rel1.relative: 0.5 1;
            rel2.to: "base_frame";
            rel2.relative: 0.5 1;
            rel2.offset: -2 -1;
         }
      }
      part { name: "elm.swallow.cancel_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description {
            align: 0 1;
            min: 50 25;
            fixed: 1 1;
            rel1.to: "base_frame";
            rel1.relative: 0.5 1;
            rel1.offset: 1 0;
            rel2.to: "base_frame";
            rel2.relative: 0.5 1;
         }
      }
      part { name: "event_blocker";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 1;
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         mouse_events: 0;
         description {
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 1; }
            image.normal: "bub_over_bot.png";
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         action: STATE_SET "show" 0.0;
         transition: "DECELERATE" 0.5;
         target: "clipper";
         after: "event_blocker_hide";
      }
      program { name: "dismiss";
         signal: "elm,state,dismiss";
         source: "";
         action: STATE_SET "default" 0.0;
         target: "clipper";
         target: "event_blocker";
         after: "dismiss_done";
      }
      program { name: "event_blocker_hide";
         signal: "elm,state,event_blocker,hide";
         source: "";
         action: STATE_SET "hide" 0.0;
         target: "event_blocker";
      }
      program { name: "dismiss_done";
         action: SIGNAL_EMIT "elm,state,dismiss,done" "";
      }
   }
}

group { name: "warning_layout";
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 127 127 127 127;
         }
         description {state: "show" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "bg";
         type: RECT;
         clip_to: "clipper";
         description { state: "default" 0.0;
            color: 0 0 0 175;
         }
      }
      part { name: "base_frame_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            min: 300 135;
            max: 300 135;
            fixed: 1 1;
            image.normal: "frame_bg.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
         }
      }
      part { name: "shine_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 0; }
            align: 0.5 0;
            min: 300 3;
            fixed: 1 1;
            image.normal: "shine.png";
         }
      }
      part { name: "base_frame";
         type: SPACER;
         description {
            rel1 { to: "base_frame_img"; offset: 10 10; }
            rel2 { to: "base_frame_img"; offset: -11 -11; }
         }
      }
      part { name: "title_bg";
         type: RECT;
         scale: 1;
         description {
            rel1.to: "base_frame";
            rel2.to: "base_frame";
            rel2.relative: 1 0;
            align: 0.5 0;
            min: 0 23;
            fixed: 0 1;
            color: 0 0 0 255;
         }
      }
      part { name: "warning_img";
         type: IMAGE;
         clip_to: "clipper";
         description {
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            align: 0 0.5;
            rel1.to: "title_bg";
            rel2.to: "title_bg";
            rel1.offset: 5 0;
            image.normal: "warning.png";
         }
      }
      part { name: "elm.text.title";
         type: TEXT;
         clip_to: "clipper";
         scale: 1;
         effect: GLOW;
         description {
            rel1.to: "title_bg";
            rel2.to: "title_bg";
            text.text: "EDC has been changed";
            text {
               font: FN;
               size: 12;
               align: 0.5 0.5;
               min: 1 1;
               ellipsis: -1;
            }
            fixed: 1 1;
            align: 0.5 0.5;
            color: COL_HI;
         }
      }
      part { name: "elm.text.desc";
         type: TEXT;
         clip_to: "clipper";
         scale: 1;
         description {
            rel1 { to: "elm.text.title"; relative: 0.5 1; offset: 0 10; }
            rel2 { to: "elm.text.title"; relative: 0.5 1; }
            text {
               font: FN;
               size: 11;
               align: 0.5 0;
               min: 1 1;
               ellipsis: -1;
            }
            align: 0.5 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.text.question";
         type: TEXT;
         clip_to: "clipper";
         scale: 1;
         description {
            rel1 { to: "elm.text.desc"; relative: 0.5 1; }
            rel2 { to: "elm.text.desc"; relative: 0.5 1; }
            text {
               font: FN;
               size: 11;
               align: 0.5 0;
               min: 1 1;
               ellipsis: -1;
            }
            align: 0.5 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.btn1";
         type: SWALLOW;
         clip_to: "clipper";
         scale: 1;
         description {
            rel1.to: "elm.swallow.btn2";
            rel2.to: "elm.swallow.btn2";
            rel1.relative: 0 0;
            rel2.relative: 0 1;
            rel2.offset: -10 -1;
            min: 50 25;
            align: 1 1;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.btn2";
         type: SWALLOW;
         clip_to: "clipper";
         scale: 1;
         description {
            rel1.to: "base_frame";
            rel2.to: "base_frame";
            rel1.relative: 0.5 1;
            rel2.relative: 0.5 1;
            min: 50 25;
            align: 0.5 1;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.btn3";
         type: SWALLOW;
         clip_to: "clipper";
         scale: 1;
         description {
            rel1.to: "elm.swallow.btn2";
            rel2.to: "elm.swallow.btn2";
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.offset: 10 0;
            min: 50 25;
            align: 0 0.5;
            fixed: 1 1;
            color: 0 0 0 255;
         }
      }
      part { name: "event_blocker";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 1;
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over_img";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         mouse_events: 0;
         description {
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 1; }
            image.normal: "bub_over_bot.png";
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         action: STATE_SET "show" 0.0;
         transition: "DECELERATE" 0.25;
         target: "clipper";
         after: "event_blocker_hide";
      }
      program { name: "dismiss";
         signal: "elm,state,dismiss";
         source: "";
         action: STATE_SET "default" 0.0;
         transition: "DECELERATE" 0.125;
         target: "clipper";
         target: "event_blocker";
         after: "dismiss_done";
      }
      program { name: "event_blocker_hide";
         signal: "elm,state,event_blocker,hide";
         source: "";
         action: STATE_SET "hide" 0.0;
         target: "event_blocker";
      }
      program { name: "dismiss_done";
         action: SIGNAL_EMIT "elm,state,dismiss,done" "";
      }
   }
}

group { name: "menu_layout";
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "show" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "show" 0.0;
            color: 0 0 0 175;
         }
         description { state: "anim" 0.0;
            color: 0 0 0 200;
         }
      }
      part { name: "base_frame";
         type: SPACER;
         scale: 1;
         description {
            align: 0.5 0.5;
            min: 640 0;
            fixed: 1 0;
            rel1.relative: 0.5 0;
            rel2.relative: 0.5 1;
         }
      }
      image { "logo";
         scale: 1;
         clip_to: "clipper";
         desc { "default";
            rel1.relative: 0.5 0;
            rel2.relative: 0.5 0;
            rel1.to_y: "padding1";
            rel2.to_y: "padding1";
            min: 350 250;
            fixed: 1 1;
            align: 0.5 0.8;
            image.normal: "full_logo.png";
         }
      }
      part { name: "padding1";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0 0.5;
            rel2.relative: 0 0.5;
            rel1.to: "base_frame";
            rel2.to: "base_frame";
            min: 23 100;
            fixed: 1 1;
            align: 0 0.5;
         }
      }
      part { name: "elm.swallow.new_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "padding1";
            rel2.to: "padding1";
            rel1.relative: 1 0.2;
            align: 0 0;
            min: 80 50;
            max: 80 50;
            fixed: 1 1;
         }
      }
      part { name: "padding2";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.new_btn";
            rel2.to: "elm.swallow.new_btn";
            rel1.relative: 1 0;
            min: 23 50;
            fixed: 1 1;
            align: 0 0.5;
         }
      }
      part { name: "elm.swallow.save_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "padding2";
            rel2.to: "padding2";
            rel1.relative: 1 0;
            align: 0 0.5;
            min: 80 50;
            fixed: 1 1;
         }
      }
      part { name: "padding3";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.save_btn";
            rel2.to: "elm.swallow.save_btn";
            rel1.relative: 1 0;
            min: 23 50;
            fixed: 1 1;
            align: 0 0.5;
         }
      }
      part { name: "elm.swallow.load_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "padding3";
            rel2.to: "padding3";
            rel1.relative: 1 0;
            align: 0 0.5;
            min: 80 50;
            fixed: 1 1;
         }
      }
      part { name: "padding4";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.load_btn";
            rel2.to: "elm.swallow.load_btn";
            rel1.relative: 1 0;
            min: 23 50;
            fixed: 1 1;
            align: 0 0.5;
         }
      }
      part { name: "elm.swallow.setting_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "padding4";
            rel2.to: "padding4";
            rel1.relative: 1 0;
            align: 0 0.5;
            min: 80 50;
            fixed: 1 1;
         }
      }
      part { name: "padding5";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.setting_btn";
            rel2.to: "elm.swallow.setting_btn";
            rel1.relative: 1 0;
            min: 23 50;
            fixed: 1 1;
            align: 0 0.5;
         }
      }
      part { name: "elm.swallow.help_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "padding5";
            rel2.to: "padding5";
            rel1.relative: 1 0;
            align: 0 0.5;
            min: 80 50;
            fixed: 1 1;
         }
      }
      part { name: "padding6";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.help_btn";
            rel2.to: "elm.swallow.help_btn";
            rel1.relative: 1 0;
            min: 23 50;
            fixed: 1 1;
            align: 0 0.5;
         }
      }
      part { name: "elm.swallow.exit_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "padding6";
            rel2.to: "padding6";
            rel1.relative: 1 0;
            align: 0 0.5;
            min: 80 50;
            fixed: 1 1;
         }
      }
      part { name: "padding7";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 1;
            rel2.offset: -10 -1;
            min: 20 20;
            fixed: 1 1;
            align: 1 1;
         }
      }
      swallow { "elm.swallow.back_button";
         scale: 1;
         clip_to: "clipper";
         desc {
            fixed: 1 1;
            min: 26 26;
            max: 26 26;
            align: 1 0.0;
         }
      }
      part { name: "event_blocker";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 1;
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         action: STATE_SET "show" 0.0;
         transition: "DECELERATE" 0.25;
         target: "bg";
         target: "clipper";
         after: "event_blocker_hide";
      }
      program { name: "event_blocker_hide";
         signal: "elm,state,event_blocker,hide";
         source: "";
         action: STATE_SET "hide" 0.0;
         target: "event_blocker";
         after: "bg_anim";
      }
      program { name: "bg_anim";
         action: STATE_SET "anim" 0.0;
         transition: "DECELERATE" 2;
         target: "bg";
         after: "bg_anim2";
      }
      program { name: "bg_anim2";
         action: STATE_SET "show" 0.0;
         transition: "DECELERATE" 2;
         target: "bg";
         after: "bg_anim";
      }
      program { name: "dismiss";
         signal: "elm,state,dismiss";
         source: "";
         action: STATE_SET "default" 0.0;
         transition: "DECELERATE" 0.125;
         target: "bg";
         target: "event_blocker";
         target: "clipper";
         after: "dismiss_done";
      }
      program { name: "dismiss_done";
         action: SIGNAL_EMIT "elm,state,dismiss,done" "";
      }
   }
}

group { name: "goto_layout";
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 300 67;
         }
      }
      part { name: "left_top_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0 0;
            rel2.relative: 0 0;
            fixed: 1 1;
            align: 0 0;
            min: 5 5;
         }
      }
      part { name: "elm.text.goto";
         type: TEXT;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            align: 0 0;
            rel1.to: "left_top_padding";
            rel2.to: "left_top_padding";
            rel1.relative: 1 1;
            rel2.relative: 1 1;
            text {
               font: FN;
               size: 11;
               align: 0 0;
            }
            color: COL_NM;
            min: 180 20;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.entry";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "elm.text.goto";
            rel2.to_y: "elm.text.goto";
            rel2.offset: -5 -1;
            fixed: 1 1;
         }
      }
      part { name: "elm.text.msg";
         type: TEXT;
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            align: 0 0;
            rel1.to: "elm.text.goto";
            rel2.to: "elm.text.goto";
            rel1.relative: 0 1;
            rel2.relative: 0 1;
            rel1.offset: 0 10;
            text {
               font: FN;
               size: 10;
               align: 0 0.5;
            }
            color: COL_HI;
            min: 180 30;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.btn";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 0;
            rel1.to_y: "elm.text.msg";
            rel2.to_y: "elm.text.msg";
            rel1.offset: 5 0;
            rel2.offset: -3 -1;
            min: 75 25;
            align: 1 0;
            fixed: 1 1;
         }
      }
   }
}
group { name: "search_layout";
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 330 90;
         }
      }
      part { name: "left_top_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0 0;
            rel2.relative: 0 0;
            fixed: 1 1;
            align: 0 0;
            min: 5 5;
         }
      }
      part { name: "elm.text.find";
         type: TEXT;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            align: 0 0;
            rel1.to: "left_top_padding";
            rel2.to: "left_top_padding";
            rel1.relative: 1 1;
            rel2.relative: 1 1;
            text {
               font: FN;
               size: 11;
               align: 0 0;
               text: "Find:";
            }
            color: COL_NM;
            min: 80 20;
            fixed: 1 1;
         }
      }
      part { name: "elm.text.replace";
         type: TEXT;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            align: 0 0;
            rel1.to: "elm.text.find";
            rel2.to: "elm.text.find";
            rel1.relative: 0 1;
            rel2.relative: 0 1;
            rel1.offset: 0 5;
            text {
               font: FN;
               size: 11;
               align: 0 0;
               text: "Replace with:";
            }
            color: COL_NM;
            min: 80 20;
            fixed: 1 1;
         }
      }
      part { name: "elm.text.dir";
         type: TEXT;
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            align: 0 0;
            rel1.to: "elm.text.replace";
            rel2.to: "elm.text.replace";
            rel1.relative: 0 1;
            rel2.relative: 0 1;
            rel1.offset: 0 10;
            text {
               font: FN;
               size: 10;
               align: 0 0.5;
               text: "Forward";
            }
            color: COL_HI;
            min: 80 30;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.find_entry";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "elm.text.find";
            rel2.to_y: "elm.text.find";
            rel2.offset: -5 -1;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.replace_entry";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "elm.text.replace";
            rel2.to_y: "elm.text.replace";
            rel2.offset: -5 -1;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.forward";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0 1;
            rel2.relative: 0 1;
            rel1.to_x: "elm.swallow.replace_entry";
            rel1.to_y: "elm.swallow.replace_entry";
            rel2.to_x: "elm.swallow.replace_entry";
            rel2.to_y: "elm.swallow.replace_entry";
            rel1.offset: 0 10;
            min: 50 25;
            align: 0 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.backward";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "elm.swallow.forward";
            rel2.to: "elm.swallow.forward";
            rel1.offset: 5 0;
            min: 50 25;
            align: 0 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.replace";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "elm.swallow.backward";
            rel2.to: "elm.swallow.backward";
            rel1.offset: 5 0;
            min: 50 25;
            align: 0 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.replace_all";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "elm.swallow.replace";
            rel2.to: "elm.swallow.replace";
            rel1.offset: 5 0;
            min: 50 25;
            align: 0 0;
            fixed: 1 1;
         }
      }
   }
}

group { name: "live_edit_layout";
   data.item: "ctrl_size" "8";
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "show" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.swallow.symbol";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
         }
      }
      part { name: "cursor_body";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "frame_l";
         type: RECT;
         mouse_events: 0;
         clip_to: "clipper";
         scale: 1;
         description { state: "default" 0.0;
            align: 0 0.5;
            rel1.relative: 0 0;
            rel2.relative: 0 1;
            min: 1 0;
            fixed: 1 0;
         }
         description { state: "anim" 0.0;
            inherit: "default" 0.0;
            color: 51 153 255 127;
         }
      }
      part { name: "frame_r";
         type: RECT;
         mouse_events: 0;
         clip_to: "clipper";
         scale: 1;
         description { state: "default" 0.0;
            align: 1 0.5;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            min: 1 0;
            fixed: 1 0;
         }
         description { state: "anim" 0.0;
            inherit: "default" 0.0;
            color: 51 153 255 127;
         }
      }
      part { name: "frame_t";
         type: RECT;
         mouse_events: 0;
         clip_to: "clipper";
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0;
            rel1.relative: 0 0;
            rel2.relative: 1 0;
            min: 0 1;
            fixed: 0 1;
         }
         description { state: "anim" 0.0;
            inherit: "default" 0.0;
            color: 51 153 255 127;
         }
      }
      part { name: "frame_b";
         type: RECT;
         mouse_events: 0;
         clip_to: "clipper";
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 1;
            rel1.relative: 0 1;
            rel2.relative: 1 1;
            min: 0 1;
            fixed: 0 1;
         }
         description { state: "anim" 0.0;
            inherit: "default" 0.0;
            color: 51 153 255 127;
         }
      }
   }
   programs {
      program { name: "on_load";
         signal: "load";
         action: STATE_SET "show" 0.0;
         target: "clipper";
         after: "anim";
         after: "clip_init";
      }
      program { name: "clip_init";
         action: STATE_SET "show" 0.0;
         target: "clipper";
         transition: DECELERATE 0.25;
      }
      program { name: "anim";
         action: STATE_SET "anim" 0.0;
         target: "frame_l";
         target: "frame_r";
         target: "frame_t";
         target: "frame_b";
         transition: LINEAR 0.5;
         after: "anim2";
      }
      program { name: "anim2";
         action: STATE_SET "default" 0.0;
         target: "frame_l";
         target: "frame_r";
         target: "frame_t";
         target: "frame_b";
         transition: LINEAR 0.5;
         after: "anim";
      }
   }
}

group { name: "viewer_layout_bg";
   parts {
      image { "bg"; nomouse;
         desc { "default";
            image.normal: "bg_demo.png";
            fill {
               size.relative: 0 0;
               size.offset: 16 16;
            }
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
   }
}

group { name: "viewer_layout";
   parts {
      part { name: "prev_clipper";
         type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "switched" 0.0;
            color: 255 255 255 0;
         }
      }
      part { name: "cur_clipper";
         type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -1 0;
            rel2.relative: 0 1;
            color: 255 255 255 0;
         }
         description { state: "switched" 0.0;
            rel1.relative: 0 0;
            rel2.relative: 1 1;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.swallow.prev";
         type: SWALLOW;
         clip_to: "prev_clipper";
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "cur_clipper";
         description { state: "default" 0.0;
            rel1.to: "cur_clipper";
            rel2.to: "cur_clipper";
         }
      }
   }
   programs {
      program { name: "switch_instant";
         signal: "elm,view,switch,instant";
         source: "";
         action: STATE_SET "switched" 0.0;
         target: "prev_clipper";
         target: "cur_clipper";
      }
      program { name: "switch";
         signal: "elm,view,switch";
         source: "";
         action: STATE_SET "default" 0.0;
         target: "prev_clipper";
         target: "cur_clipper";
         after: "switched";
      }
      program { name: "switched";
         action: STATE_SET "switched" 0.0;
         target: "prev_clipper";
         target: "cur_clipper";
         transition: DECELERATE 0.25;
      }
   }
}

group { "preview_layout";
   parts {
      image { "bg";
         desc { "default";
            min: 120 120;
            image.normal: "bg_demo.png";
            fill {
               size.relative: 0 0;
               size.offset: 16 16;
            }
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      swallow { "elm.swallow.img";
         desc {
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
   }
}

group { name: "toggle_layout";
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: 150 1;
            color: 56 56 56 255;
         }
         description { state: "odd" 0.0;
            inherit: "default" 0.0;
            color: 64 64 64 255;
         }
      }
      part { name: "text_base";
         type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
            min: 35 0;
            fixed: 1 0;
         }
      }
      part { name: "elm.text.type";
         type: TEXT;
         description { state: "default" 0.0;
            rel1.to: "text_base";
            rel1.offset: 5 0;
            rel2.to: "text_base";
            align: 0.0 0.5;
            fixed: 1 0;
            text {
               font: FN;
               size: 10;
               align: 0.0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
            color: COL_NM;
         }
      }
      part { name: "padding1";
         type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "text_base";
            rel1.relative: 1.0 0.0;
            rel2.to: "text_base";
            align: 0.0 0.5;
            min: 5 0;
            fixed: 1 0;
         }
      }
      part { name: "elm.swallow.toggle";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "padding1";
            rel1.relative: 1.0 0.0;
            rel2.to: "padding2";
            rel2.relative: 0.0 1.0;
         }
      }
      part { name: "padding2";
         type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.relative: 1.0 0.0;
            rel2.to: "base";
            align: 1.0 0.5;
            min: 5 0;
            fixed: 1 0;
         }
      }
   }
   programs {
      program { name: "odd_item_set";
         signal: "odd,item,set";
         source: "";
         action: STATE_SET "odd" 0.0;
         target: "base";
      }
   }
}

group { name: "slider_layout";
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: 235 1;
            color: 56 56 56 255;
         }
         description { state: "odd" 0.0;
            inherit: "default" 0.0;
            color: 64 64 64 255;
         }
      }
      part { name: "text_base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
            min: 35 0;
            fixed: 1 0;
         }
      }
      part { name: "elm.text.type";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "text_base";
            rel1.offset: 5 0;
            rel2.to: "text_base";
            align: 0.0 0.5;
            fixed: 1 0;
            text {
               font: FN;
               size: 10;
               align: 0.0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
            color: COL_NM;
         }
      }
      part { name: "padding1";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "text_base";
            rel1.relative: 1.0 0.0;
            rel2.to: "text_base";
            align: 0.0 0.5;
            min: 5 0;
            fixed: 1 0;
         }
      }
      part { name: "elm.text.slider_min";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "padding1";
            rel1.relative: 1.0 0.0;
            rel2.to: "padding1";
            rel2.relative: 1.0 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            text {
               font: FN;
               size: 8;
               align: 0.0 0.0;
               min: 1 1;
               ellipsis: -1;
            }
            color: COL_NM;
         }
      }
      part { name: "elm.text.slider_max";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "padding2";
            rel1.relative: 0.0 0.0;
            rel2.to: "padding2";
            rel2.relative: 0.0 0.0;
            align: 1.0 0.0;
            fixed: 1 1;
            text {
               font: FN;
               size: 8;
               align: 0.0 0.5;
               min: 1 1;
               ellipsis: -1;
            }
            color: COL_NM;
         }
      }
      part { name: "elm.swallow.slider";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "padding1";
            rel1.to_y: "elm.text.slider_min";
            rel1.relative: 1.0 1.0;
            rel2.to: "padding1";
            rel2.relative: 1.0 1.0;
            align: 0 0;
            min: 185 0;
            fixed: 1 0;
         }
      }
      part { name: "padding2";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.slider";
            rel2.to_x: "elm.swallow.slider";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0.0 0.5;
            min: 0 0;
            fixed: 1 0;
         }
      }
   }
   programs {
      program { name: "odd_item_set";
         signal: "odd,item,set";
         source: "";
         action: STATE_SET "odd" 0.0;
         target: "base";
      }
   }
}

group { name: "colorselector_layout";
   parts {
      spacer { "base";
         scale: 1;
         desc {
         }
      }
      swallow { "elm.swallow.colorselector";
         scale: 1;
         desc {
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
            align: 0.0 0.0;
            min: 160 130;
            max: 160 130;
         }
      }
      spacer { "colors_padding";
         scale: 1;
         desc {
            fixed: 0 1;
            rel1.to_y: "elm.swallow.colorselector";
            rel2.to_y: "elm.swallow.colorselector";
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
            align: 0.5 0.0;
            min: 0 1;
         }
      }
      spacer { "vertical_padding";
         scale: 1;
         desc {
            fixed: 1 1;
            align: 0.0 0.5;
            min: 7 0;
            rel1.to_x: "elm.swallow.colorselector";
            rel2.to_x: "elm.swallow.colorselector";
            rel1.to_y: "colors_padding";
            rel2.to_y: "colors_padding";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 0.0;
         }
      }
      spacer { "view_top_padding";
         scale: 1;
         desc {
            align: 0.5 0.0;
            fixed: 0 1;
            min: 0 10;
            rel1.to_x: "vertical_padding";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 0.0;
         }
      }
      swallow { "view_left_padding";
         scale: 1;
         desc {
            align: 0.0 0.5;
            fixed: 1 0;
            min: 3 0;
            rel1.to_x: "vertical_padding";
            rel1.to_y: "view_top_padding";
            rel2.to_x: "vertical_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      swallow { "elm.swallow.color_view";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 77 0;
            max: 77 40;
            rel1.to_x: "view_left_padding";
            rel1.to_y: "view_top_padding";
            rel2.to_y: "colors_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 0.0;
         }
      }
      spacer { "inputs_padding";
         scale: 1;
         desc {
            fixed: 0 1;
            align: 0.5 0.0;
            min: 0 5;
            rel1.to_x: "vertical_padding";
            rel1.to_y: "elm.swallow.color_view";
            rel2.to_y: "elm.swallow.color_view";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      text { "elm.text.red";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 15 20;
            max: 15 20;
            fixed: 1 1;
            rel1.to_x: "vertical_padding";
            rel1.to_y: "inputs_padding";
            rel2.to_x: "vertical_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
            text {
               font: FN;
               size: 10;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      text { "elm.text.green";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 15 20;
            max: 15 20;
            fixed: 1 1;
            rel1.to_x: "vertical_padding";
            rel1.to_y: "elm.text.red";
            rel2.to_x: "vertical_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
            text {
               font: FN;
               size: 10;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      text { "elm.text.blue";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 15 20;
            max: 15 20;
            fixed: 1 1;
            rel1.to_x: "vertical_padding";
            rel1.to_y: "elm.text.green";
            rel2.to_x: "vertical_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
            text {
               font: FN;
               size: 10;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      text { "elm.text.alpha";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 15 20;
            max: 15 20;
            fixed: 1 1;
            rel1.to_x: "vertical_padding";
            rel1.to_y: "elm.text.blue";
            rel2.to_x: "vertical_padding";
            rel2.to_y: "colors_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 0.0;
            text {
               font: FN;
               size: 10;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      swallow { "elm.swallow.input_red";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 65 20;
            max: 65 20;
            rel1.to_x: "elm.text.red";
            rel1.to_y: "inputs_padding";
            rel1.to_y: "inputs_padding";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      swallow { "elm.swallow.input_green";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 65 20;
            max: 65 20;
            rel1.to_x: "elm.text.red";
            rel1.to_y: "elm.swallow.input_red";
            rel1.to_y: "elm.swallow.input_red";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      swallow { "elm.swallow.input_blue";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 65 20;
            max: 65 20;
            rel1.to_x: "elm.text.red";
            rel1.to_y: "elm.swallow.input_green";
            rel1.to_y: "elm.swallow.input_green";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      swallow { "elm.swallow.input_alpha";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 65 20;
            max: 65 20;
            rel1.to_x: "elm.text.red";
            rel1.to_y: "elm.swallow.input_blue";
            rel1.to_y: "elm.swallow.input_blue";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      swallow { "elm.swallow.preset_colors";
         scale: 1;
         desc {
            align: 0.0 0.0;
            min: 0 25;
            max: -1 25;
            rel1.to_y: "elm.swallow.input_alpha";
            rel1.relative: 0.0 1.0;
            color: 128 0 0 128;
         }
      }
   }
}

group { name: "statusbar_layout";
   parts {
      part { name: "base_clip";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "hide" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "scale_spacer";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0 0;
            rel2.relative: 0 1;
            min: 120 0;
            fixed: 1 0;
         }
      }
      swallow { "scale_btn";
         clip_to: "base_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            rel1.offset: 3 -3;
            align: 0.0 0.5;
            min: 15 15;
            fixed: 1 0;
         }
      }
      part { name: "elm.text.scale";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "scale_btn";
            rel2.to_x: "scale_btn";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
               text:"1.00x";
            }
         }
      }
      part { name: "size_spacer";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1 0;
            rel2.relative: 1 1;
            rel1.to: "scale_spacer";
            rel2.to: "scale_spacer";
            rel1.offset: 5 0;
            min: 120 0;
            fixed: 1 0;
            align: 0 0.5;
         }
      }
      swallow { "resize_btn";
         clip_to: "base_clip";
         scale: 1;
         desc {
            rel1.to_x: "size_spacer";
            rel1.relative: 0.0 0;
            rel2.relative: 0.0 1;
            rel1.offset: 3 -3;
            align: 0 0;
            fixed: 1 0;
            min: 15 15;
         }
      }
      swallow { "invert_btn";
         clip_to: "base_clip";
         scale: 1;
         desc {
            rel1.to_x: "resize_btn";
            rel1.relative: 1.0 0;
            rel2.relative: 0.0 1;
            rel1.offset: 3 -3;
            align: 0 0;
            fixed: 1 0;
            min: 15 15;
         }
      }
      part { name: "elm.text.size_w";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "invert_btn";
            rel2.to_x: "invert_btn";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.size_x";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.size_w";
            rel2.to_x: "elm.text.size_w";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_NM;
            text {
               text: "x";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.size_h";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.size_x";
            rel2.to_x: "elm.text.size_x";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      image { "cursor_arrow";
         clip_to: "base_clip";
         scale: 1;
         desc {
            rel1.to_x: "size_spacer";
            rel2.to_x: "size_spacer";
            rel1.relative: 1.0 0.5;
            rel2.relative: 1.0 0.5;
            rel1.offset: 3 0;
            align: 0 0.5;
            fixed: 1 1;
            min: 12 12;
            image.normal: "cursor_arrow.png";
         }
      }
      part { "elm.swallow.cursor_arrow.tooltip";
         type: SWALLOW;
         description { state: "default" 0.0;
           fixed: 1 1;
           rel1.to: "cursor_arrow";
           rel2.to: "cursor_arrow";
         }
      }
      part { name: "elm.text.cursor_pxx";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "cursor_arrow";
            rel2.to_x: "cursor_arrow";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.cursor_px.";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.cursor_pxx";
            rel2.to_x: "elm.text.cursor_pxx";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_NM;
            text {
               text: ",";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.cursor_pxy";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.cursor_px.";
            rel2.to_x: "elm.text.cursor_px.";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.cursor_sep";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.cursor_pxy";
            rel2.to_x: "elm.text.cursor_pxy";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_NM;
            text {
               text: " | ";
               size: 11;
               align: 0 1;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.cursor_relx";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.cursor_sep";
            rel2.to_x: "elm.text.cursor_sep";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.cursor_rel.";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.cursor_relx";
            rel2.to_x: "elm.text.cursor_relx";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_NM;
            text {
               text: ",";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.cursor_rely";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "elm.text.cursor_rel.";
            rel2.to_x: "elm.text.cursor_rel.";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "cursor_spacer";
         type: SPACER;
         scale: 1;
         description {
            rel1.to: "size_spacer";
            rel1.relative: 1.0 0.0;
            rel2.to: "size_spacer";
            rel2.relative: 1.0 1.0;
            min: 200 0;
            fixed: 1 0;
            align: 0 0.5;
         }
      }
      part { name: "group_spacer";
         type: SPACER;
         scale: 1;
         description {
            rel1.to: "line_spacer";
            rel1.relative: 0.0 0.0;
            rel2.to: "line_spacer";
            rel2.relative: 0.0 1.0;
            min: 200 0;
            fixed: 1 0;
            align: 1 0.5;
         }
      }
      image { "group_icon";
         clip_to: "base_clip";
         scale: 1;
         desc { "default";
            rel1.to_x: "cursor_spacer";
            rel2.to_x: "elm.text.group_name";
            rel1.relative: 1.0 0.0;
            rel2.relative: 0.0 1.0;
            rel1.offset: 0 1;
            min: 15 15;
            max: 15 15;
            align: 1 0.5;
            image.normal: "navi_group.png";
         }
      }
      part { "elm.swallow.group_icon.tooltip";
         type: SWALLOW;
         description { state: "default" 0.0;
           fixed: 1 1;
           rel1.to: "group_icon";
           rel2.to: "group_icon";
         }
      }
      part { name: "elm.text.group_name";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to_x: "group_spacer";
            rel2.to_x: "line_spacer";
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            align: 1 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 1 0.5;
               min: 0 0;
               max: 1 0;
            }
         }
      }
      part { name: "line_spacer";
         type: SPACER;
         scale: 1;
         description {
            rel1.relative: 1 0;
            align: 1 0.5;
            min: 100 0;
            fixed: 1 0;
         }
      }
      swallow { "line_btn";
         clip_to: "base_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text.line_[";
            rel2.to: "elm.text.line_[";
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            align: 1 0.5;
            min: 18 18;
            fixed: 1 0;
         }
      }
      part { name: "elm.text.line_[";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to: "elm.text.line_cur";
            rel2.to: "elm.text.line_cur";
            rel2.relative: 0 1.0;
            align: 1 0.5;
            fixed: 1 0;
            color: COL_NM;
            text {
               text: "Line  ";
               size: 11;
               align: 1 0.5;
               min: 1 0;
               max: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { "elm.swallow.line.tooltip";
         type: SWALLOW;
         description { state: "default" 0.0;
           fixed: 1 1;
           rel1.to: "elm.text.line_[";
           rel2.to: "elm.text.line_[";
         }
      }
      part { name: "elm.text.line_cur";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.to: "elm.text.line_c";
            rel2.to: "elm.text.line_c";
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            align: 1 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 1 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.line_c";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to: "elm.text.line_max";
            rel2.to: "elm.text.line_max";
            rel2.relative: 0 1.0;
            align: 1 0.5;
            fixed: 1 0;
            color: COL_NM;
            text {
               text: ":";
               size: 11;
               align: 1 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.line_max";
         type: TEXT;
         clip_to: "base_clip";
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 1 0.5;
            fixed: 1 0;
            color: COL_HI;
            text {
               size: 11;
               align: 1 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.info_msg";
         type: TEXT;
         scale: 1;
         effect: SHADOW BOTTOM;
         nomouse;
         description { state: "default" 0.0;
            align: 0 0.5;
            rel1.offset: 0 -1;
            rel2.offset: -1 -2;
            text {
               font: FN;
               size: 11;
               align: 0 0.5;
            }
            color: COL_NM_TRANS;
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            color: COL_NM;
         }
      }
      program { name: "info_msg_show";
         signal: "elm,action,info_msg,show";
         source: "";
         action: STATE_SET "hide" 0.0;
         target: "base_clip";
         transition: DECELERATE 0.15;
         after: "info_msg_show2";
      }
      program { name: "info_msg_show2";
         action: STATE_SET "show" 0.0;
         target: "elm.text.info_msg";
         transition: DECELERATE 0.3;
         after: "info_msg_idle";
      }
      program { name: "info_msg_idle";
         action: STATE_SET "show" 0.0;
         target: "elm.text.info_msg";
         transition: LINEAR 3.5;
         after: "info_msg_hide";
      }
      program { name: "info_msg_hide";
         signal: "elm,action,info_msg,hide";
         source: "";
         action: STATE_SET "default" 0.0;
         target: "elm.text.info_msg";
         transition: DECELERATE 0.3;
         after: "info_msg_hide2";
      }
      program { name: "info_msg_hide2";
         action: STATE_SET "default" 0.0;
         target: "base_clip";
         transition: DECELERATE 0.3;
      }
   }
}

group { name: "main_layout";
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description {
            min: 810 440;
         }
      }
      swallow { "elm.swallow.panes";
         scale: 1;
         desc { "default";
            rel1 {
               relative: 1.0 0.0;
               to_x: "elm.swallow.file_browser";
            }
            rel2 {
               relative: 0.0 0.0;
               to_x: "elm.swallow.edc_navigator";
               to_y: "elm.swallow.statusbar";
            }
         }
      }
      part { name: "error_alert";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to_y: "elm.swallow.panes";
            rel2.to_y: "elm.swallow.panes";
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 200 0 0 175;
         }
      }
      part { name: "elm.swallow.statusbar";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0 1;
            rel2.relative: 1 1;
            align: 0.5 0;
            min: 0 18;
            fixed: 0 1;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1;
         }
      }
      swallow { "elm.swallow.file_browser";
         scale: 1;
         desc { "default";
            rel1 {
               offset: 1 0;
            }
            rel2 {
               relative: 0.0 0.0;
               to_y: "elm.swallow.statusbar";
            }
            align: 1 0;
            min: 200 0;
            fixed: 1 0;
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            align: 0 0;
            visible: 1;
         }
      }
      swallow { "elm.swallow.edc_navigator";
         scale: 1;
         desc { "default";
            rel1 {
               relative: 1.0 0.0;
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "elm.swallow.statusbar";
            }
            align: 0 0;
            min: 200 0;
            max: 0 -1;
            fixed: 1 0;
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            align: 1 0;
            rel1 {
               relative: 1.0 0.0;
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "elm.swallow.statusbar";
            }
            visible: 1;
         }
      }
   }
   programs {
      program { "file_browser_show";
         signal: "elm,state,file_browser,show";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.file_browser";
         transition: DECELERATE 0.25;
      }
      program { "file_browser_hide";
         signal: "elm,state,file_browser,hide";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.file_browser";
         transition: DECELERATE 0.25;
      }
      program { "edc_navigator_show";
         signal: "elm,state,edc_navigator,show";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.edc_navigator";
         transition: DECELERATE 0.25;
      }
      program { "edc_navigator_hide";
         signal: "elm,state,edc_navigator,hide";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.edc_navigator";
         transition: DECELERATE 0.25;
      }
      program { name: "statusbar_show";
         signal: "elm,state,statusbar,show";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.statusbar";
         transition: DECELERATE 0.25;
      }
      program { name: "statusbar_hide";
         signal: "elm,state,statusbar,hide";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.statusbar";
         transition: DECELERATE 0.25;
      }
      program { name: "alert_show";
         signal: "elm,state,alert,show";
         action: STATE_SET "visible" 0.0;
         target: "error_alert";
         after: "alert_show2";
      }
      program { name: "alert_show2";
         action: STATE_SET "default" 0.0;
         target: "error_alert";
         transition: DECELERATE 1;
      }
   }
}

group { "tools_layout";
   parts {
      rect { "tools_base";
         scale: 1;
         desc { "default";
            rel1.relative: 0 0;
            rel2.relative: 1 0;
            min: 0 23;
            fixed: 0 1;
            align: 0.5 1;
            color: 64 64 64 255;
         }
         desc { "visible";
            inherit: "default";
            align: 0.5 0;
         }
      }
      swallow { "elm.swallow.tools";
         scale: 1;
         desc { "default";
            rel1.to: "tools_base";
            rel2.to: "tools_base";
            rel1.offset: 2 0;
            rel2.offset: -4 -1;
         }
      }
      image { "tools_overlay";
         scale: 1;
         mouse_events: 0;
         desc { "default";
            rel1 { to: "tools_base"; }
            rel2 { to: "tools_base"; }
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.border_scale: 1;
         }
      }
      swallow { "elm.swallow.content";
         scale: 1;
         desc { "default";
            rel1 {
               relative: 0.0 1.0;
               to_y: "elm.swallow.tools";
            }
            rel2.to_y: "elm.swallow.fixed_bar";
            rel2.relative: 1.0 0.0;
         }
      }
      rect { "fixed_bar_bg";
         desc { "default";
            color: 175 175 175 175;
            rel.to: "elm.swallow.fixed_bar";
         }
      }
      swallow { "elm.swallow.fixed_bar";
         scale: 1;
         desc { "default";
            min: 0 0;
            align: 0.5 0;
            fixed: 1 1;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
         }
         desc { "visible";
            inherit: "default";
            min: 0 20;
            align: 0.5 1;
         }
      }
   }
   programs {
      program { "tools_show";
         signal: "elm,state,tools,show";
         action: STATE_SET "visible";
         target: "tools_base";
         transition: DECELERATE 0.25 CURRENT;
      }
      program { "tools_hide";
         signal: "elm,state,tools,hide";
         action: STATE_SET "default";
         target: "tools_base";
         transition: DECELERATE 0.25 CURRENT;
      }
      program { "fixed_bar_show";
         signal: "elm,state,fixed_bar,show";
         action: STATE_SET "visible";
         target: "elm.swallow.fixed_bar";
         transition: DECELERATE 0.25 CURRENT;
      }
      program { "fixed_bar_hide";
         signal: "elm,state,fixed_bar,hide";
         action: STATE_SET "default";
         target: "elm.swallow.fixed_bar";
         transition: DECELERATE 0.25 CURRENT;
      }
   }
}

group { "live_view_tools_layout";
   parts {
      spacer { "padding1";
         scale: 1;
         desc { "default";
            rel2.relative: 0.0 1.0;
            min: 14 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.highlight";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding1";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding1";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding2";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.highlight";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.highlight";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.dummy";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding2";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding2";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding3";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.dummy";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.dummy";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.mirror";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding3";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding3";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding4";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.mirror";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.mirror";
            min: 14 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      rect { "separator";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding4";
               relative: 1.0 0.5;
            }
            rel2 {
               to_x: "padding4";
               relative: 1.0 0.5;
            }
            min: 1 18;
            fixed: 1 1;
            align: 0.0 0.5;
            color: 48 48 48 255;
         }
      }
      spacer { "padding5";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "separator";
               relative: 1.0 0.0;
            }
            rel2.to_x: "separator";
            min: 14 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.live_edit1";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding5";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding5";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding6";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.live_edit1";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.live_edit1";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.live_edit2";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding6";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding6";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding7";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.live_edit2";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.live_edit2";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.live_edit3";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding7";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding7";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding8";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.live_edit3";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.live_edit3";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.live_edit4";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding8";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding8";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding9";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.live_edit4";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.live_edit4";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.live_edit5";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding9";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding9";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding10";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "elm.swallow.live_edit5";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.live_edit5";
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.live_edit6";
         scale: 1;
         desc { "default";
            rel1 {
               to_x: "padding10";
               relative: 1.0 0.0;
            }
            rel2.to_x: "padding10";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
   }
}

group { "text_editor_tools_layout";
   parts {
      spacer { "base";
         scale: 1;
         desc { "default";
            min: 334 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding1";
         scale: 1;
         desc { "default";
            rel.to: "base";
            rel2.relative: 0.0 1.0;
            min: 14 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.save";
         scale: 1;
         desc { "default";
            rel.to: "padding1";
            rel1.relative: 1.0 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding2";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.save";
            rel1.relative: 1.0 0.0;
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.undo";
         scale: 1;
         desc { "default";
            rel.to: "padding2";
            rel1.relative: 1.0 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding3";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.undo";
            rel1.relative: 1.0 0.0;
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.redo";
         scale: 1;
         desc { "default";
            rel.to: "padding3";
            rel1.relative: 1.0 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding4";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.redo";
            rel1.relative: 1.0 0.0;
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.find";
         scale: 1;
         desc { "default";
            rel.to: "padding4";
            rel1.relative: 1.0 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding5";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.find";
            rel1.relative: 1.0 0.0;
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.goto";
         scale: 1;
         desc { "default";
            rel.to: "padding5";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "padding5";
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding6";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.goto";
            rel1.relative: 1.0 0.0;
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.lines";
         scale: 1;
         desc { "default";
            rel.to: "padding6";
            rel1.relative: 1.0 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding7";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.lines";
            rel1.relative: 1.0 0.0;
            min: 8 0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      swallow { "elm.swallow.template";
         scale: 1;
         desc { "default";
            rel.to: "padding7";
            rel1.relative: 1.0 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      spacer { "padding8";
         scale: 1;
         desc { "default";
            rel.to: "base";
            rel1.relative: 1.0 0.0;
            min: 14 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      swallow { "elm.swallow.menu";
         scale: 1;
         desc { "default";
            rel.to: "padding8";
            rel2.relative: 0.0 1.0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      spacer { "padding9";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.menu";
            rel2.relative: 0.0 1.0;
            min: 14 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      rect { "separator";
         scale: 1;
         desc { "default";
            rel.to: "padding9";
            rel1.relative: 0.0 0.5;
            rel2.relative: 0.0 0.5;
            min: 1 18;
            fixed: 1 1;
            align: 1.0 0.5;
            color: 48 48 48 255;
         }
      }
      spacer { "padding10";
         scale: 1;
         desc { "default";
            rel.to: "separator";
            rel2.relative: 0.0 1.0;
            min: 8 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      swallow { "elm.swallow.status";
         scale: 1;
         desc { "default";
            rel.to: "padding10";
            rel2.relative: 0.0 1.0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      spacer { "padding11";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.status";
            rel2.relative: 0.0 1.0;
            min: 8 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      swallow { "elm.swallow.edc_navigator";
         scale: 1;
         desc { "default";
            rel.to: "padding11";
            rel2.relative: 0.0 1.0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      spacer { "padding12";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.edc_navigator";
            rel2.relative: 0.0 1.0;
            min: 8 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      swallow { "elm.swallow.file_browser";
         scale: 1;
         desc { "default";
            rel.to_x: "padding12";
            rel2.relative: 0.0 1.0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      spacer { "padding13";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.file_browser";
            rel2.relative: 0.0 1.0;
            min: 8 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      swallow { "elm.swallow.console";
         scale: 1;
         desc { "default";
            rel.to: "padding13";
            rel2.relative: 0.0 1.0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      spacer { "padding14";
         scale: 1;
         desc { "default";
            rel.to: "elm.swallow.console";
            rel2.relative: 0.0 1.0;
            min: 8 0;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      rect { "separator2";
         scale: 1;
         desc { "default";
            rel.to: "padding14";
            rel1.relative: 0.0 0.5;
            rel2.relative: 0.0 0.5;
            min: 1 18;
            fixed: 1 1;
            align: 1.0 0.5;
            color: 48 48 48 255;
         }
      }

   }
}

group { name: "rel_to_layout";
   parts {
      spacer { "base";
         scale: 1;
         desc { "default";
            min: 230 95;
         }
         desc { "single";
            min: 115 95;
         }
      }
      text { "guide_x";
         scale: 1;
         effect: SHADOW BOTTOM;
         desc { "default";
            rel1.relative: 0 0;
            rel2.relative: 0 0;
            align: 0 0;
            min: 115 20;
            fixed: 1 1;
            text {
               font: FN;
               size: 10;
               align: 0.1 0.5;
               min: 1 0;
               ellipsis: -1;
               text: "Relative to X:";
            }
            color: COL_NM;
         }
         desc { "single";
            rel.to: "guide_y";
            visible: 0;
         }
      }
      text { "guide_y";
         scale: 1;
         effect: SHADOW BOTTOM;
         desc { "default";
            rel1.relative: 1 0;
            rel2.relative: 1 0;
            align: 1 0;
            min: 115 20;
            fixed: 1 1;
            text {
               font: FN;
               size: 10;
               align: 0.1 0.5;
               min: 1 0;
               ellipsis: -1;
               text: "Relative to Y:";
            }
            color: COL_NM;
         }
         desc { "single";
            rel.to: "guide_x";
            visible: 0;
         }
      }
      swallow { "elm.swallow.x";
         scale: 1;
         desc { "default";
            rel1.to: "guide_x";
            rel1.relative: 0 1;
            rel2.to_x: "guide_x";
            rel2.to_y: "button_area";
            rel2.relative: 1 0;
            rel2.offset: -3 -1;
            align: 0.5 0;
         }
         desc { "single";
            rel.to: "elm.swallow.y";
            visible: 0;
         }
      }
      swallow { "elm.swallow.y";
         scale: 1;
         desc { "default";
            rel1.to: "guide_y";
            rel1.relative: 0 1;
            rel2.to_x: "guide_y";
            rel2.to_y: "button_area";
            rel2.relative: 1 0;
            rel1.offset: 2 0;
            align: 0.5 0;
         }
         desc { "single";
            rel.to: "elm.swallow.x";
            visible: 0;
         }
      }
      spacer { "button_area";
         scale: 1;
         desc { "default";
            min: 0 30;
            align: 0.5 1;
            fixed: 1 1;
            rel1.relative: 0 1;
            rel2.relative: 1 1;
         }
      }
      swallow { "elm.swallow.ok_btn";
         scale: 1;
         desc { "default";
            rel.to: "button_area";
            rel1.relative: 0.5 1;
            rel2.relative: 0.5 1;
            align: 0.5 1;
            fixed: 1 1;
            min: 50 25;
         }
      }
   }
   programs {
      program { "show_x";
         signal: "elm,state,show,x";
         action: STATE_SET "single" 0.0;
         target: "elm.swallow.y";
         target: "guide_y";
         target: "base";
      }
      program { "show_y";
         signal: "elm,state,show,y";
         action: STATE_SET "single" 0.0;
         target: "elm.swallow.x";
         target: "guide_x";
         target: "base";
      }
   }
}

group { name: "padding3_layout";
   parts {
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 3 0;
         }
      }
   }
}

group { name: "edit_layout";
   parts {
      part { name: "base_clip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.linenumber";
            rel2.to: "elm.swallow.linenumber";
            rel2.relative: 1 1;
            fixed: 1 0;
         }
         description { state: "hide" 0.0;
            inherit: "default";
            rel2.relative: 0 1;
         }
      }
      part { name: "elm.swallow.linenumber";
         type: SWALLOW;
         scale: 1;
         clip_to: "base_clip";
         mouse_events: 0;
         description {
            fixed: 1 0;
            align: 0 0.5;
            min: 15 0;
            rel1.relative: 0 0;
            rel1.offset: 3 0;
            rel2.relative: 0 1;
         }
      }
      part { name: "elm.swallow.edit";
         type: SWALLOW;
         scale: 1;
         description {
            align: 0 0.5;
            rel1.relative: 1 0;
            rel1.to: "base_clip";
            fixed: 0 1;
         }
      }
      part { name: "disabler";
         description { state: "default" 0.0;
            image.normal: "disabler.png";
            fill.type: TILE;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "linenumber_show";
         signal: "elm,state,linenumber,show";
         action: STATE_SET "default" 0.0;
         target: "base_clip";
         transition: DECELERATE 0.35;
      }
      program { name: "linenumber_hide";
         signal: "elm,state,linenumber,hide";
         action: STATE_SET "hide" 0.0;
         target: "base_clip";
         transition: DECELERATE 0.35;
      }
   }
   programs {
      program { name: "layout_disable";
         signal: "elm,state,disabled";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         transition: DECELERATE 0.125;
      }
      program { name: "layout_enable";
         signal: "elm,state,enabled";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         transition: DECELERATE 0.125;
      }
   }
}
